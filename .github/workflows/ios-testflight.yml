name: iOS TestFlight Deployment

on:
  push:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'testflight'
        type: choice
        options:
        - testflight
        - development

env:
  NODE_VERSION: '20'
  RUBY_VERSION: '3.2'

jobs:
  build-and-deploy:
    runs-on: macos-latest
    timeout-minutes: 45
    
    steps:
    - name: 📱 Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: 🏷️ Generate build number
      id: build_number
      run: |
        BUILD_NUMBER=$(date +%Y%m%d%H%M)
        echo "build_number=${BUILD_NUMBER}" >> $GITHUB_OUTPUT
        echo "Build number: ${BUILD_NUMBER}"

    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📥 Install dependencies
      run: |
        npm ci
        echo "✅ Dependencies installed"
        
    - name: 🏗️ Build Capacitor app
      run: |
        echo "Building React app..."
        npm run build
        
        echo "Syncing Capacitor iOS..."
        npx cap sync ios
        
        echo "✅ Capacitor iOS sync complete"
        
    - name: 💎 Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ env.RUBY_VERSION }}
        bundler-cache: true
        working-directory: ios
        
    - name: 🔧 Install CocoaPods dependencies
      run: |
        cd ios/App
        pod install --repo-update
        echo "✅ CocoaPods dependencies installed"
        
    - name: 🔐 Setup Keychain
      run: |
        security create-keychain -p "" build.keychain
        security list-keychains -s build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p "" build.keychain
        security set-keychain-settings -t 3600 -u build.keychain
        echo "✅ Keychain configured"
        
    - name: 📜 Generate certificates and profiles
      run: |
        cd ios
        bundle exec fastlane certificates_distribution
        echo "✅ Certificates and provisioning profiles ready"
      env:
        ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
        ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
        ASC_PRIVATE_KEY: ${{ secrets.ASC_PRIVATE_KEY }}
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
        MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
        
    - name: 🚀 Build and upload to TestFlight
      run: |
        cd ios
        bundle exec fastlane beta
      env:
        ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
        ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
        ASC_PRIVATE_KEY: ${{ secrets.ASC_PRIVATE_KEY }}
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
        MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
        
    - name: 📤 Upload build artifacts
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: ios-build-logs
        path: |
          ios/App/build/**/*.log
          ~/Library/Logs/gym/**
        retention-days: 5
        
    - name: 💬 Create deployment summary
      if: success()
      run: |
        echo "## 🎉 iOS Deployment Successful!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Build Information" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Number**: ${{ steps.build_number.outputs.build_number }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch**: \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Workflow**: [\`${{ github.run_id }}\`](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Next Steps" >> $GITHUB_STEP_SUMMARY
        echo "1. 🔍 Check [App Store Connect](https://appstoreconnect.apple.com) for your build" >> $GITHUB_STEP_SUMMARY
        echo "2. 📱 Build will be available in TestFlight within 10-15 minutes" >> $GITHUB_STEP_SUMMARY
        echo "3. 👥 Add testers and distribute when ready" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "_Build completed at $(date)_" >> $GITHUB_STEP_SUMMARY

    - name: 🧹 Cleanup Keychain
      if: always()
      run: |
        security delete-keychain build.keychain || true
        echo "✅ Keychain cleanup complete"